#ifndef _NV__TARGET_MACROS
#define _NV__TARGET_MACROS

#include "__preprocessor"

#if defined(_NV_COMPILER_NVCXX)

#  define _NV_TARGET_VAL_SM35 nv::target::sm35
#  define _NV_TARGET_VAL_SM37 nv::target::sm37
#  define _NV_TARGET_VAL_SM50 nv::target::sm50
#  define _NV_TARGET_VAL_SM52 nv::target::sm52
#  define _NV_TARGET_VAL_SM53 nv::target::sm53
#  define _NV_TARGET_VAL_SM60 nv::target::sm60
#  define _NV_TARGET_VAL_SM61 nv::target::sm61
#  define _NV_TARGET_VAL_SM62 nv::target::sm62
#  define _NV_TARGET_VAL_SM70 nv::target::sm70
#  define _NV_TARGET_VAL_SM72 nv::target::sm72
#  define _NV_TARGET_VAL_SM75 nv::target::sm75
#  define _NV_TARGET_VAL_SM80 nv::target::sm80

#  define _NV_TARGET_VAL nv::target::device

#  define _NV_TARGET_IS_HOST nv::target::is_host
#  define _NV_TARGET_IS_DEVICE nv::target::is_device

#if defined(__NVCOMPILER_CUDA_ARCH__)
#  define _NV_TARGET_DEF __NVCOMPILER_CUDA_ARCH__
#endif

#  define _NV_TARGET_PROVIDES(q)   nv::target::provides(q)
#  define _NV_TARGET_IS_EXACTLY(q) nv::target::is_exactly(q)

#elif defined(_NV_COMPILER_NVCC)

#  define _NV_TARGET_VAL_SM35 350
#  define _NV_TARGET_VAL_SM37 370
#  define _NV_TARGET_VAL_SM50 500
#  define _NV_TARGET_VAL_SM52 520
#  define _NV_TARGET_VAL_SM53 530
#  define _NV_TARGET_VAL_SM60 600
#  define _NV_TARGET_VAL_SM61 610
#  define _NV_TARGET_VAL_SM62 620
#  define _NV_TARGET_VAL_SM70 700
#  define _NV_TARGET_VAL_SM72 720
#  define _NV_TARGET_VAL_SM75 750
#  define _NV_TARGET_VAL_SM80 800

// There is a case where __CUDA_ARCH__ is 0 while undefined that can cause host code paths to emit a device code dispatch entry
#if defined(__CUDA_ARCH__)
#    define _NV_TARGET_VAL __CUDA_ARCH__
#    define _NV_TARGET_DEF __CUDA_ARCH__
#endif

#  define _NV_TARGET_IS_HOST !defined(__CUDA_ARCH__)
#  define _NV_TARGET_IS_DEVICE !_NV_TARGET_IS_HOST

#if defined(_NV_TARGET_VAL)
#  define _NV_DEVICE_CHECK(q) (q)
#else
#  define _NV_DEVICE_CHECK(q) (false)
#endif

#  define _NV_TARGET_PROVIDES(q)   _NV_DEVICE_CHECK(_NV_TARGET_VAL >= q)
#  define _NV_TARGET_IS_EXACTLY(q) _NV_DEVICE_CHECK(_NV_TARGET_VAL == q)

#endif

#define _NV_TARGET_PROVIDES_SM35 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM35))
#define _NV_TARGET_PROVIDES_SM37 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM37))
#define _NV_TARGET_PROVIDES_SM50 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM50))
#define _NV_TARGET_PROVIDES_SM52 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM52))
#define _NV_TARGET_PROVIDES_SM53 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM53))
#define _NV_TARGET_PROVIDES_SM60 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM60))
#define _NV_TARGET_PROVIDES_SM61 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM61))
#define _NV_TARGET_PROVIDES_SM62 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM62))
#define _NV_TARGET_PROVIDES_SM70 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM70))
#define _NV_TARGET_PROVIDES_SM72 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM72))
#define _NV_TARGET_PROVIDES_SM75 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM75))
#define _NV_TARGET_PROVIDES_SM80 (_NV_TARGET_PROVIDES(_NV_TARGET_VAL_SM80))

#define _NV_TARGET_IS_EXACTLY_SM35 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM35))
#define _NV_TARGET_IS_EXACTLY_SM37 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM37))
#define _NV_TARGET_IS_EXACTLY_SM50 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM50))
#define _NV_TARGET_IS_EXACTLY_SM52 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM52))
#define _NV_TARGET_IS_EXACTLY_SM53 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM53))
#define _NV_TARGET_IS_EXACTLY_SM60 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM60))
#define _NV_TARGET_IS_EXACTLY_SM61 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM61))
#define _NV_TARGET_IS_EXACTLY_SM62 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM62))
#define _NV_TARGET_IS_EXACTLY_SM70 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM70))
#define _NV_TARGET_IS_EXACTLY_SM72 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM72))
#define _NV_TARGET_IS_EXACTLY_SM75 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM75))
#define _NV_TARGET_IS_EXACTLY_SM80 (_NV_TARGET_IS_EXACTLY(_NV_TARGET_VAL_SM80))

#define NV_PROVIDES_SM35   PROVIDES_SM35
#define NV_PROVIDES_SM37   PROVIDES_SM37
#define NV_PROVIDES_SM50   PROVIDES_SM50
#define NV_PROVIDES_SM52   PROVIDES_SM52
#define NV_PROVIDES_SM53   PROVIDES_SM53
#define NV_PROVIDES_SM60   PROVIDES_SM60
#define NV_PROVIDES_SM61   PROVIDES_SM61
#define NV_PROVIDES_SM62   PROVIDES_SM62
#define NV_PROVIDES_SM70   PROVIDES_SM70
#define NV_PROVIDES_SM72   PROVIDES_SM72
#define NV_PROVIDES_SM75   PROVIDES_SM75
#define NV_PROVIDES_SM80   PROVIDES_SM80

#define NV_IS_EXACTLY_SM35 IS_EXACTLY_SM35
#define NV_IS_EXACTLY_SM37 IS_EXACTLY_SM37
#define NV_IS_EXACTLY_SM50 IS_EXACTLY_SM50
#define NV_IS_EXACTLY_SM52 IS_EXACTLY_SM52
#define NV_IS_EXACTLY_SM53 IS_EXACTLY_SM53
#define NV_IS_EXACTLY_SM60 IS_EXACTLY_SM60
#define NV_IS_EXACTLY_SM61 IS_EXACTLY_SM61
#define NV_IS_EXACTLY_SM62 IS_EXACTLY_SM62
#define NV_IS_EXACTLY_SM70 IS_EXACTLY_SM70
#define NV_IS_EXACTLY_SM72 IS_EXACTLY_SM72
#define NV_IS_EXACTLY_SM75 IS_EXACTLY_SM75
#define NV_IS_EXACTLY_SM80 IS_EXACTLY_SM80

#define NV_IS_HOST         IS_HOST
#define NV_IS_DEVICE       IS_DEVICE

// Platform invoke mechanisms
#if defined(_NV_COMPILER_NVCXX)

#define _NV_ARCH_COND(q) (_NV_TARGET_##q)

#define _NV_BLOCK_EXPAND(...) _NV_REMOVE_PAREN(__VA_ARGS__)

#define _NV_TARGET_IF(cond, t, ...) \
    (if target _NV_ARCH_COND(cond) {    \
      _NV_BLOCK_EXPAND(t)        \
    } else { _NV_BLOCK_EXPAND(__VA_ARGS__) })

#elif defined(_NV_COMPILER_NVCC)

#if (_NV_TARGET_IS_EXACTLY_SM35)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM35 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM35 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM37)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM37 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM37 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM50)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM50 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM50 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM52)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM52 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM52 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM53)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM53 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM53 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM60)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM60 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM60 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM61)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM61 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM61 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM62)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM62 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM62 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM70)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM70 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM70 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM72)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM72 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM72 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM75)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM75 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM75 0
#endif

#if (_NV_TARGET_IS_EXACTLY_SM80)
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM80 1
#else
#  define _NV_TARGET_BOOL_IS_EXACTLY_SM80 0
#endif

#if _NV_TARGET_IS_HOST
#  define _NV_TARGET_BOOL_IS_HOST   1
#  define _NV_TARGET_BOOL_IS_DEVICE 0
#else
#  define _NV_TARGET_BOOL_IS_HOST   0
#  define _NV_TARGET_BOOL_IS_DEVICE 1
#endif

// NVCC Greater than stuff

#if (_NV_TARGET_PROVIDES_SM35)
#  define _NV_TARGET_BOOL_PROVIDES_SM35 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM35 0
#endif

#if (_NV_TARGET_PROVIDES_SM37)
#  define _NV_TARGET_BOOL_PROVIDES_SM37 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM37 0
#endif

#if (_NV_TARGET_PROVIDES_SM50)
#  define _NV_TARGET_BOOL_PROVIDES_SM50 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM50 0
#endif

#if (_NV_TARGET_PROVIDES_SM52)
#  define _NV_TARGET_BOOL_PROVIDES_SM52 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM52 0
#endif

#if (_NV_TARGET_PROVIDES_SM53)
#  define _NV_TARGET_BOOL_PROVIDES_SM53 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM53 0
#endif

#if (_NV_TARGET_PROVIDES_SM60)
#  define _NV_TARGET_BOOL_PROVIDES_SM60 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM60 0
#endif

#if (_NV_TARGET_PROVIDES_SM61)
#  define _NV_TARGET_BOOL_PROVIDES_SM61 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM61 0
#endif

#if (_NV_TARGET_PROVIDES_SM62)
#  define _NV_TARGET_BOOL_PROVIDES_SM62 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM62 0
#endif

#if (_NV_TARGET_PROVIDES_SM70)
#  define _NV_TARGET_BOOL_PROVIDES_SM70 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM70 0
#endif

#if (_NV_TARGET_PROVIDES_SM72)
#  define _NV_TARGET_BOOL_PROVIDES_SM72 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM72 0
#endif

#if (_NV_TARGET_PROVIDES_SM75)
#  define _NV_TARGET_BOOL_PROVIDES_SM75 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM75 0
#endif

#if (_NV_TARGET_PROVIDES_SM80)
#  define _NV_TARGET_BOOL_PROVIDES_SM80 1
#else
#  define _NV_TARGET_BOOL_PROVIDES_SM80 0
#endif

#define _NV_INNER_BLOCK_EXPAND(...) __VA_ARGS__
#define _NV_BLOCK_EXPAND(...) { _NV_REMOVE_PAREN(__VA_ARGS__) }
#define _NV_ARCH_COND_CAT(cond) _NV_TARGET_BOOL_##cond
#define _NV_TARGET_IF(cond, t, ...) _NV_IF(_NV_ARCH_COND_CAT(cond), t, __VA_ARGS__)

#endif // _NV_COMPILER_NVCC

#define _NV_TARGET_DISPATCH_HANDLE0()
#define _NV_TARGET_DISPATCH_HANDLE2(q, fn)        _NV_TARGET_IF(q, fn)
#define _NV_TARGET_DISPATCH_HANDLE4(q, fn, ...)   _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE2(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE6(q, fn, ...)   _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE4(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE8(q, fn, ...)   _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE6(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE10(q, fn, ...)  _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE8(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE12(q, fn, ...)  _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE10(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE14(q, fn, ...)  _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE12(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE16(q, fn, ...)  _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE14(__VA_ARGS__))
#define _NV_TARGET_DISPATCH_HANDLE18(q, fn, ...)  _NV_TARGET_IF(q, fn, _NV_TARGET_DISPATCH_HANDLE16(__VA_ARGS__))

#define _NV_TARGET_DISPATCH(...) _NV_BLOCK_EXPAND(_NV_PP_DISPATCH(_NV_TARGET_DISPATCH_HANDLE, __VA_ARGS__))

#define NV_IF_TARGET(cond, t, ...) _NV_BLOCK_EXPAND(_NV_TARGET_IF(cond, t, __VA_ARGS__))
#define NV_DISPATCH_TARGET(...) _NV_TARGET_DISPATCH(__VA_ARGS__)

#endif // _NV__TARGET_MACROS